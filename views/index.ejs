<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Todo Application</title>
        <!-- Bootstrap CDN  -->
        <link
            href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
            rel="stylesheet"
            integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
            crossorigin="anonymous"
        />
        <!-- Font Awesome CDN  -->
        <link
            rel="stylesheet"
            href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css"
            integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A=="
            crossorigin="anonymous"
            referrerpolicy="no-referrer"
        />

        <!-- Own CSS  -->
        <link rel="stylesheet" href="/css/style.css" />
    </head>
    <body>
        <!-- Navbar start  -->
        <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
            <div class="container">
                <a class="navbar-brand">Todo App</a>
                <button
                    class="navbar-toggler"
                    type="button"
                    data-bs-toggle="collapse"
                    data-bs-target="#navbarNav"
                    aria-controls="navbarNav"
                    aria-expanded="false"
                    aria-label="Toggle navigation"
                >
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div
                    class="collapse navbar-collapse justify-content-end"
                    id="navbarNav"
                >
                    <ul class="navbar-nav">
                        <!-- <li class="nav-item">
                            
                        </li> -->
                        <li class="nav-item">
                            <img id="profilePic" class="rounded-circle object-fit-cover" src="uploads/<%= user.profilePic %>" alt="">
                            <div id="functions">
                                <ul class="list-group">
                                    <li class="list-group-item funcLi text-center">Hi, <%= user.name.split(' ')[0] %></li>
                                    <li class="list-group-item funcLi"><a class="nav-link text-center" href="/edit"><i class="fa-regular fa-pen-to-square"></i> Edit Profile</a></li>
                                    <li class="list-group-item funcLi"><a class="nav-link text-center" href="/logout"><i class="fa-solid fa-arrow-right-from-bracket"></i> Logout</a></li>
                                </ul>
                            </div>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <!-- Navbar end  -->

        <div class="container">
            <h1 class="text-center my-5">Simple Todo App</h1>
            <form id="inputField" class="p-5">
                <input class="addTask p-2" type="text" name="addTask" />
                <button id="submitBtn" class="btn btn-success p-2 ms-1" type="submit">
                    Add Task
                </button>
                <button id="cancelBtn" onclick="cancelEditTask()" class="btn btn-danger p-2 ms-1" style="display: none;" type="button">
                    Cancel
                </button>
            </form>
            <div class="listSection mt-5">
                <table class="table table-striped text-center">
                    <thead>
                        <tr>
                            <th scope="col">Task</th>
                            <th scope="col">Status</th>
                            <th scope="col">Update/Delete</th>
                        </tr>
                    </thead>
                    <tbody>
                      <% for(let todo of todos) {%>
                        <tr>
                            <td><%= todo.task %></td>
                            <td>
                                <input
                                    onchange="updateData(this, '<%- todo._id %>')"
                                    class="ms-2"
                                    type="radio"
                                    name="<%=todo._id%>"
                                    value="incomplete"
                                    <%= todo.status === 'incomplete' ? 'checked' : '' %>
                                />
                                    Incomplete
                                    <input
                                    onchange="updateData(this, '<%- todo._id %>')"
                                    class="ms-2"
                                    type="radio"
                                    name="<%=todo._id%>"
                                    value="complete"
                                    <%= todo.status === 'complete' ? 'checked': '' %>
                                />
                                Complete
                            </td>
                            <td>
                                <i onclick="updateTask(this, '<%- todo._id %>')" id="<%=todo._id%>" class="fa-solid fa-pen-to-square btn btn-primary p-2 ms-1"></i>
                                <i onclick="deleteData('<%- todo._id %>')" id="<%=todo._id%>" class="fa-solid fa-trash btn btn-danger p-2 ms-1"></i>
                            </td>
                        </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>

        <script
            src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
            crossorigin="anonymous"
        ></script>
        <script>
            const profilePic = document.getElementById('profilePic');
            const functions = document.getElementById('functions');
            const submitBtn = document.getElementById('submitBtn');
            const cancelBtn = document.getElementById('cancelBtn');
            const inputField = document.getElementById('inputField');
            const addTask = document.querySelector('.addTask');
            let isClicked = true;
            let taskId;
            profilePic.addEventListener('click', function() {
                if(isClicked){
                    functions.style.display = 'block'
                    isClicked = false;
                } else{
                    functions.style.display = 'none'
                    isClicked = true
                }
            })

            inputField.addEventListener('submit', async function (e) {
                e.preventDefault()
                console.log(submitBtn.innerText)
                if(addTask.value) {
                    const data = {
                        addTask: addTask.value
                    }
                    console.log(data)
                    if (submitBtn.innerText.toLowerCase() === 'add task') {
                        await fetch('/', {
                            method: 'POST',
                            headers: {
                                'content-type': 'application/JSON'
                            },
                            body: JSON.stringify(data)
                        });
                        location.reload()
                    }  else if(submitBtn.innerText.toLowerCase() === 'edit') {
                        console.log(taskId)
                        await fetch(`/task/${taskId}`, {
                            method: 'PUT',
                            headers: {
                                'content-type': 'application/json'
                            },
                            body: JSON.stringify(data)
                        });
                        location.reload();
                    }
                } else {
                    alert('Task Field was empty!');
                }
            })



            async function deleteData(id) {
                await fetch(`http://localhost:3000/${id}`, {
                    method: 'DELETE'
                })
                location.reload()
            }

            async function updateData(e, id) {
                const result = {
                    status: e.value
                }
                await fetch('http://localhost:3000/' + id, {
                    method: 'PUT',
                    headers: {
                        "content-type": "application/json"
                    },
                    body: JSON.stringify(result)
                })
                location.reload()
            }

            function updateTask(e, id) {
                taskId = id
                const taskName = e.parentNode.parentNode.children[1].innerText;
                addTask.value = taskName;
                submitBtn.innerHTML = 'Edit';
                submitBtn.className = 'btn btn-primary p-2 ms-1';
                cancelBtn.style.display = 'inline-block';
                addTask.focus()
                console.dir(addTask)
            }


            function cancelEditTask() {
                addTask.value = '';
                cancelBtn.style.display = 'none';
                submitBtn.innerHTML = 'Add Task';
            }

        </script>
    </body>
</html>
